" Wrap gitcommit file types at the appropriate length
filetype indent plugin on
set nocompatible              " be iMproved, required
"filetype off                  " required

set expandtab
set shiftwidth=2
set softtabstop=2
set nu
set autoread
set nonumber

" Mappings
map <Esc><Esc> :q <CR>
map <F2> :Ex <CR>
map <F3> :!clear && grep -nr
map <F4> :!rspec --color <CR>
map <F5> :w <CR>
map <F6> :Gstatus <CR>
map <Space> /
map Ã± :
map <Tab> $

" Todos
function Box()
  return '[ ]'
endfunction

function EmptyBox()
  return '\[ \]'
endfunction

function FullBox()
  return '\[x\]'
endfunction

function Done()
  call setline('.', substitute(getline('.'), EmptyBox(), FullBox(), 'g'))
endfunction

function Undone()
  call setline('.', substitute(getline('.'), FullBox(), EmptyBox(), 'g'))
endfunction

function AddBox()
  call setline('.', substitute(getline('.'), '\] - ', '\]\[ \] - ', 'g'))
endfunction

function RemoveBox()
  call setline('.', substitute(getline('.'), '\]\[ \] -', '\] -','g'))
endfunction

function Newtask()
  call append(line('.'), Box() . ' - ' )
endfunction

map <F7> :call Done() <CR>
map <F8> :call Undone() <CR>
map <F9> :call AddBox() <CR>
map <F11> :call RemoveBox() <CR>
map <F10> :call Newtask() <CR>j$a

"set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
" Ctrl+P plugin (snap open)
Plugin 'kien/ctrlp.vim'
" " Solarized
Plugin 'altercation/vim-colors-solarized'
" " Fugitive
Plugin 'tpope/vim-fugitive'
Plugin 'slim-template/vim-slim'
Plugin 'bronson/vim-trailing-whitespace'

call vundle#end()            " required




